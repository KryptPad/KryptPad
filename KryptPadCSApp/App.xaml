<Application
    x:Class="KryptPadCSApp.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:KryptPadCSApp"
    xmlns:Models="using:KryptPadCSApp.Models"
    xmlns:Behaviors="using:KryptPadCSApp.Behaviors"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core" 
    xmlns:Converters="using:KryptPadCSApp.Converters"
    >


    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Theme.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--Converters-->
            <Converters:VisibilityConverter x:Name="VisibilityConverter" />
            <Converters:NotVisibleConverter x:Name="NotVisibleConverter" />

            <!--FF3297D1-->

            <SolidColorBrush x:Key="SignInMainGridBackgroundBrush" Color="White" Opacity="0.75"/>
            <LinearGradientBrush x:Key="SignInBackgroundGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF93D4F9" Offset="0"/>
                <GradientStop Color="White" Offset="1"/>

            </LinearGradientBrush>

            <SolidColorBrush x:Key="SplitViewBackgroundBrush" Color="#FF0078d7" />
            <SolidColorBrush x:Key="SplitViewForegroundBrush" Color="White" />

            <SolidColorBrush x:Key="MenuButtonBackgroundBrush" Color="#FF0078d7" />
            <SolidColorBrush x:Key="MenuButtonPressedBackgroundBrush" Color="#FF505050" />
            <SolidColorBrush x:Key="MenuButtonHoverBackgroundBrush" Color="#FF555555" />
            <SolidColorBrush x:Key="MenuButtonCheckedBackgroundBrush" Color="#FF505050" />
            <SolidColorBrush x:Key="MenuButtonCheckedPressedBackgroundBrush" Color="#FF606060" />
            <SolidColorBrush x:Key="MenuButtonCheckedHoverBackgroundBrush" Color="#FF656565" />

            <SolidColorBrush x:Key="NavButtonPressedBackgroundBrush" Color="#FF505050" />
            <SolidColorBrush x:Key="NavButtonHoverBackgroundBrush" Color="#FF555555" />
            <SolidColorBrush x:Key="NavButtonCheckedBackgroundBrush" Color="#FF505050" />
            <SolidColorBrush x:Key="NavButtonCheckedPressedBackgroundBrush" Color="#FF606060" />
            <SolidColorBrush x:Key="NavButtonCheckedHoverBackgroundBrush" Color="#FF656565" />

            <!--<SolidColorBrush x:Key="TextForegroundBrush" Color="Black" />-->

            <x:Double x:Key="SplitViewNormalNavFontSize">16</x:Double>
            <x:Double x:Key="SplitViewLargeNavFontSize">20</x:Double>
            <x:Double x:Key="SplitViewBackButtonHeight">32</x:Double>



            <Style x:Key="SmallInfoTextBlock" TargetType="TextBlock">
                <Setter Property="FontSize" Value="12" />
            </Style>

            <Style x:Key="MediumHeaderTextBlock" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Segoe UI Light" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}" />
            </Style>

            <Style TargetType="TextBlock" x:Key="SplitViewTextBlockStyle">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                <Setter Property="FontSize" Value="{ThemeResource SplitViewNormalNavFontSize}" />
            </Style>

            <Style x:Key="LoginGridWrapperStyle" TargetType="Grid">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <!--<Setter Property="MaxWidth" Value="800" />-->

            </Style>


            <!--Style for tab navigation icons-->
            <Style TargetType="RadioButton" x:Key="TabNavButtonStyle">
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Margin" Value="8,0" />

                <Setter Property="Template">
                    <Setter.Value>

                        <ControlTemplate TargetType="RadioButton">

                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Glyph"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To=".5"
                                                             Duration="0:0:0.2" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Glyph"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0"
                                                             Duration="0" />
                                                <DoubleAnimation Storyboard.TargetName="GlyphChecked"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0" />
                                            </Storyboard>

                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <!--Glyph to use when not checked-->
                                <TextBlock x:Name="Glyph" Text="{TemplateBinding Tag}"
                                       FontFamily="{StaticResource SymbolThemeFontFamily}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Opacity=".25"
                                       FontSize="20"/>

                                <!--Glyph to use when checked-->
                                <TextBlock x:Name="GlyphChecked" Text="{TemplateBinding Tag}"
                                       FontFamily="{StaticResource SymbolThemeFontFamily}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Opacity="0"
                                       FontSize="20"/>

                            </Grid>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Style>

            <!--Mobile items page panel template-->
            <ItemsPanelTemplate x:Key="MobileCategoryItemPanelTemplate">
                <ItemsStackPanel Orientation="Vertical" />
            </ItemsPanelTemplate>

            <!--Desktop items page panel template-->
            <ItemsPanelTemplate x:Key="DesktopCategoryItemPanelTemplate">
                <ItemsWrapGrid Orientation="Horizontal" />
            </ItemsPanelTemplate>

            <!--Style for the items page grid view-->
            <DataTemplate x:Key="GridViewItemsTemplate">

                <Border Background="{StaticResource GridViewItemBackgroundThemeBrush}"
                        HorizontalAlignment="Stretch">
                    <UserControl HorizontalContentAlignment="Stretch">
                        <!--Item grid-->
                        <Grid x:Name="ItemTemplateGrid" 
                              HorizontalAlignment="Stretch"
                              Width="192"
                              Height="64"  >

                            <!--Handle visual states-->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="VisualStateGroup">

                                    <VisualState x:Name="VisualStatePhone">

                                        <!--Trigger when the width is at least 0-->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="0"/>
                                        </VisualState.StateTriggers>

                                        <VisualState.Setters>
                                            <!--Set the item template's width in mobile-->
                                            <Setter Target="ItemTemplateGrid.Width" Value="auto" />
                                        </VisualState.Setters>
                                    </VisualState>


                                    <VisualState x:Name="VisualStateTablet">

                                        <!--Trigger when the width is at least tablet sizeMargin="12"-->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="1024"/>
                                        </VisualState.StateTriggers>

                                        <VisualState.Setters>
                                            <!--Reset-->
                                            
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--Item icon-->
                            <Border Grid.Column="0"
                                    Background="{StaticResource GridViewItemAccentThemeBrush}"
                                    Width="64"
                                    Height="64">


                            </Border>

                            <!--Item name-->
                            <StackPanel Grid.Column="1" Padding="8" VerticalAlignment="Center" >
                                <!--<TextBlock Text="{Binding Icon}" FontFamily="Segoe MDL2 Assets" FontSize="32" HorizontalAlignment="Center"
                                                   Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                                                   Margin="0,0,0,10"/>-->
                                <TextBlock Text="{Binding Name}" HorizontalAlignment="Left" TextWrapping="Wrap" />
                            </StackPanel>

                        </Grid>


                    </UserControl>

                </Border>

            </DataTemplate>

            <!--Template for field list-->
            <DataTemplate x:Key="FieldListDataTemplate">

                <Grid HorizontalAlignment="Stretch" 
                  Margin="0,0,12,0" >

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{Binding Name}" 
                           Grid.Row="0"
                           Grid.Column="0" />

                    <TextBox Text="{Binding Value, Mode=TwoWay}" 
                             PlaceholderText="Value"
                             Grid.Row="1"
                             Grid.Column="0"/>

                    <Button Grid.Row="1"
                        Grid.Column="1"
                        Command="{Binding DataContext.CopyFieldValueCommand, ElementName=AddNewItemPage}"
                        CommandParameter="{Binding}">
                        <SymbolIcon Symbol="Copy" />
                    </Button>

                    <!--Command="{Binding DataContext.FieldMenuButtonCommand, ElementName=AddNewItemPage}"-->
                    <!--CommandParameter="{Binding ElementName=MenuButton}"-->
                    <Button x:Name="MenuButton"
                        Grid.Row="1"
                        Grid.Column="2"
                        
                        >
                        ...

                        <!--Behavior to open flyout-->
                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <Behaviors:OpenMenuFlyoutAction />
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>

                        <!--Context menu-->
                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Delete"
                                            Command="{Binding DataContext.DeleteFieldCommand, ElementName=AddNewItemPage }"
                                            CommandParameter="{Binding}" />

                                <MenuFlyoutItem Text="Rename"
                                            Command="{Binding DataContext.RenameFieldCommand, ElementName=AddNewItemPage }"
                                            CommandParameter="{Binding}" />

                                <MenuFlyoutItem Text="Generate password"
                                            Command="{Binding DataContext.GeneratePasswordCommand, ElementName=AddNewItemPage }"
                                            CommandParameter="{Binding}" 
                                            Visibility="{Binding IsPasswordType, Converter={StaticResource VisibilityConverter}}"/>
                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                    </Button>

                </Grid>


                <!--<TextBlock Text="{Binding Name}" />-->
            </DataTemplate>

            <!--Template for the profile list-->
            <DataTemplate x:Key="ProfileListDataTemplate">
                <Grid x:Name="ProfileGrid" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <!--A nice little icon-->
                    <SymbolIcon Grid.Row="0"
                                            Grid.Column="0" 
                                            Symbol="ProtectedDocument" 
                                            Margin="0,0,12,0" />

                    <!--Profile name-->
                    <TextBlock Text="{Binding Name}"
                                           Grid.Row="0"
                                           Grid.Column="1"
                                           VerticalAlignment="Center"/>


                </Grid>
            </DataTemplate>

        </ResourceDictionary>

    </Application.Resources>


</Application>

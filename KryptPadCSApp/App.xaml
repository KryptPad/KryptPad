<Application
    x:Class="KryptPadCSApp.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:KryptPadCSApp"
    xmlns:Models="using:KryptPadCSApp.Models"
    RequestedTheme="Light">

    <Application.Resources>
        <!--FF3297D1-->
        <SolidColorBrush x:Key="AppLoginBackgroundBrush" Color="#FF173A55" />
        <SolidColorBrush x:Key="AppLoginMainGridBackgroundBrush" Color="#FFE0E0E0" />

        <SolidColorBrush x:Key="SplitViewBackgroundBrush" Color="#FF0078d7" />
        <SolidColorBrush x:Key="SplitViewForegroundBrush" Color="White" />

        <SolidColorBrush x:Key="MenuButtonBackgroundBrush" Color="#FF0078d7" />
        <SolidColorBrush x:Key="MenuButtonPressedBackgroundBrush" Color="#FF505050" />
        <SolidColorBrush x:Key="MenuButtonHoverBackgroundBrush" Color="#FF555555" />
        <SolidColorBrush x:Key="MenuButtonCheckedBackgroundBrush" Color="#FF505050" />
        <SolidColorBrush x:Key="MenuButtonCheckedPressedBackgroundBrush" Color="#FF606060" />
        <SolidColorBrush x:Key="MenuButtonCheckedHoverBackgroundBrush" Color="#FF656565" />

        <SolidColorBrush x:Key="NavButtonPressedBackgroundBrush" Color="#FF505050" />
        <SolidColorBrush x:Key="NavButtonHoverBackgroundBrush" Color="#FF555555" />
        <SolidColorBrush x:Key="NavButtonCheckedBackgroundBrush" Color="#FF505050" />
        <SolidColorBrush x:Key="NavButtonCheckedPressedBackgroundBrush" Color="#FF606060" />
        <SolidColorBrush x:Key="NavButtonCheckedHoverBackgroundBrush" Color="#FF656565" />

        <!--<SolidColorBrush x:Key="TextForegroundBrush" Color="Black" />-->

        <x:Double x:Key="SplitViewNormalNavFontSize">16</x:Double>
        <x:Double x:Key="SplitViewLargeNavFontSize">20</x:Double>
        <x:Double x:Key="SplitViewBackButtonHeight">32</x:Double>


        <Style x:Key="MediumHeaderTextBlock" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI Light" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}" />
        </Style>

        <Style TargetType="TextBlock" x:Key="SplitViewTextBlockStyle">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="FontSize" Value="{ThemeResource SplitViewNormalNavFontSize}" />
        </Style>

        <Style x:Key="LoginGridWrapperStyle" TargetType="Grid">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="MaxWidth" Value="400" />
        </Style>
        
        <Style x:Key="LoginGridStyle" TargetType="Grid">
            <Setter Property="Background" Value="{StaticResource AppLoginMainGridBackgroundBrush}"/>
            <Setter Property="Padding" Value="12" />
        </Style>
        
        
        <Style TargetType="RadioButton" x:Key="SplitViewMenuButtonStyle">
            <Setter Property="Background" Value="{ThemeResource MenuButtonBackgroundBrush}" />
            <Setter Property="Foreground" Value="{ThemeResource SplitViewForegroundBrush}" />
            <Setter Property="Padding" Value="1,4,0,0" />
            <!--<Setter Property="HorizontalAlignment" Value="Stretch" />-->
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HoverBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedHoverBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedPressedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="48" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="48" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>

                                <Grid.Resources>
                                    <Style TargetType="Rectangle" x:Name="FocusVisual">
                                        <Setter Property="Opacity" Value="0" />
                                        <Setter Property="StrokeDashArray" Value="1,1" />
                                        <Setter Property="StrokeEndLineCap" Value="Square" />
                                    </Style>
                                </Grid.Resources>

                                <!-- background -->
                                <Grid x:Name="NotCheckedBackground" Grid.ColumnSpan="4">
                                    <Rectangle x:Name="PressedBackground" Visibility="Collapsed" Fill="{StaticResource MenuButtonPressedBackgroundBrush}"/>
                                    <Rectangle x:Name="HoverBackground" Visibility="Collapsed" Fill="{StaticResource MenuButtonHoverBackgroundBrush}"/>
                                </Grid>
                                <Grid x:Name="CheckedBackground" Grid.ColumnSpan="4" Visibility="Collapsed" Background="{StaticResource MenuButtonCheckedBackgroundBrush}">
                                    <Rectangle x:Name="CheckedPressedBackground" Visibility="Collapsed" Fill="{StaticResource MenuButtonCheckedPressedBackgroundBrush}"/>
                                    <Rectangle x:Name="CheckedHoverBackground" Visibility="Collapsed" Fill="{StaticResource MenuButtonCheckedHoverBackgroundBrush}"/>
                                </Grid>

                                <!-- focus -->
                                <Rectangle x:Name="FocusVisualWhite" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashOffset="1.5" Style="{StaticResource FocusVisual}" />
                                <Rectangle x:Name="FocusVisualBlack" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashOffset="0.5" Style="{StaticResource FocusVisual}" />

                                <!-- glyph -->
                                <TextBlock x:Name="Glyph" Text="&#xe700;" Style="{StaticResource SplitViewTextBlockStyle}" FontSize="{StaticResource SplitViewLargeNavFontSize}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="RadioButton" x:Key="SplitViewNavButtonStyle">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SplitViewForegroundBrush}" />
            <Setter Property="Padding" Value="1,4,0,0" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="GroupName" Value="Primary" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HoverBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedHoverBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedPressedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="48" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="48" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>

                                <Grid.Resources>
                                    <Style TargetType="Rectangle" x:Name="FocusVisual">
                                        <Setter Property="Opacity" Value="0" />
                                        <Setter Property="StrokeDashArray" Value="1,1" />
                                        <Setter Property="StrokeEndLineCap" Value="Square" />
                                    </Style>
                                </Grid.Resources>

                                <!-- background -->
                                <Grid x:Name="NotCheckedBackground" Grid.ColumnSpan="4">
                                    <Rectangle x:Name="PressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonPressedBackgroundBrush}"/>
                                    <Rectangle x:Name="HoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonHoverBackgroundBrush}"/>
                                </Grid>
                                <Grid x:Name="CheckedBackground" Grid.ColumnSpan="4" Visibility="Collapsed" Background="{StaticResource NavButtonCheckedBackgroundBrush}">
                                    <Rectangle x:Name="CheckedPressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedPressedBackgroundBrush}"/>
                                    <Rectangle x:Name="CheckedHoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedHoverBackgroundBrush}"/>
                                </Grid>

                                <!-- focus -->
                                <Rectangle x:Name="FocusVisualWhite" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashOffset="1.5" Style="{StaticResource FocusVisual}" />
                                <Rectangle x:Name="FocusVisualBlack" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashOffset="0.5" Style="{StaticResource FocusVisual}" />

                                <!-- glyph -->
                                <TextBlock x:Name="Glyph" Text="{TemplateBinding Tag}" Style="{StaticResource SplitViewTextBlockStyle}" FontSize="{StaticResource SplitViewLargeNavFontSize}" />

                                <!-- text -->
                                <ContentPresenter x:Name="ContentPresenter"
                        			Grid.Column="1"
                        			Margin="{TemplateBinding Padding}"
                        			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        			AutomationProperties.AccessibilityView="Raw"
                        			Content="{TemplateBinding Content}"
                        			ContentTemplate="{TemplateBinding ContentTemplate}"
                        			ContentTransitions="{TemplateBinding ContentTransitions}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="RadioButton" x:Key="TabNavButtonStyle">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SplitViewForegroundBrush}" />
            <Setter Property="Padding" Value="1,4,0,0" />
            
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="GroupName" Value="Primary" />
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="59">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HoverBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedHoverBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedPressedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Width="50">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="48" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="48" />
                                    
                                </Grid.ColumnDefinitions>

                                <Grid.Resources>
                                    <Style TargetType="Rectangle" x:Name="FocusVisual">
                                        <Setter Property="Opacity" Value="0" />
                                        <Setter Property="StrokeDashArray" Value="1,1" />
                                        <Setter Property="StrokeEndLineCap" Value="Square" />
                                    </Style>
                                </Grid.Resources>

                                <!-- background -->
                                <Grid x:Name="NotCheckedBackground" Grid.ColumnSpan="4">
                                    <Rectangle x:Name="PressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonPressedBackgroundBrush}"/>
                                    <Rectangle x:Name="HoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonHoverBackgroundBrush}"/>
                                </Grid>
                                <Grid x:Name="CheckedBackground" Grid.ColumnSpan="4" Visibility="Collapsed" Background="{StaticResource NavButtonCheckedBackgroundBrush}">
                                    <Rectangle x:Name="CheckedPressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedPressedBackgroundBrush}"/>
                                    <Rectangle x:Name="CheckedHoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedHoverBackgroundBrush}"/>
                                </Grid>

                                <!-- focus -->
                                <Rectangle x:Name="FocusVisualWhite" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashOffset="1.5" Style="{StaticResource FocusVisual}" />
                                <Rectangle x:Name="FocusVisualBlack" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashOffset="0.5" Style="{StaticResource FocusVisual}" />

                                <!-- glyph -->
                                <TextBlock x:Name="Glyph" Text="{TemplateBinding Tag}" Style="{StaticResource SplitViewTextBlockStyle}" FontSize="{StaticResource SplitViewLargeNavFontSize}" />

                                <!-- text -->
                                <!--<ContentPresenter x:Name="ContentPresenter"
                        			Grid.Column="1"
                        			Margin="{TemplateBinding Padding}"
                        			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        			AutomationProperties.AccessibilityView="Raw"
                        			Content="{TemplateBinding Content}"
                        			ContentTemplate="{TemplateBinding ContentTemplate}"
                        			ContentTransitions="{TemplateBinding ContentTransitions}" />-->
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="GridViewItemsTemplate">
            <!--<Border Background="{Binding Background}">-->
            <Grid Width="116" Height="116" >
                <StackPanel Padding="10" VerticalAlignment="Center" >
                    <!--<TextBlock Text="{Binding Icon}" FontFamily="Segoe MDL2 Assets" FontSize="32" HorizontalAlignment="Center"
                                                   Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                                                   Margin="0,0,0,10"/>-->
                    <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" TextWrapping="WrapWholeWords" />
                </StackPanel>
            </Grid>
            <!--</Border>-->
        </DataTemplate>

        <!--Template for field list-->
        <DataTemplate x:Key="FieldListDataTemplate">

            <Grid HorizontalAlignment="Stretch" 
                  Margin="0,0,12,0" >

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding Name}" 
                           Grid.Row="0"
                           Grid.Column="0" />

                <TextBox Text="{Binding Value, Mode=TwoWay}" 
                             PlaceholderText="Value"
                             Grid.Row="1"
                             Grid.Column="0"/>

                <Button Grid.Row="1"
                        Grid.Column="1"
                        Command="{Binding DataContext.CopyFieldValueCommand, ElementName=AddNewItemPage}"
                        CommandParameter="{Binding}">
                    <SymbolIcon Symbol="Copy" />
                </Button>

                <Button x:Name="MenuButton"
                        Grid.Row="1"
                        Grid.Column="2"
                        Command="{Binding DataContext.FieldMenuButtonCommand, ElementName=AddNewItemPage}"
                        CommandParameter="{Binding ElementName=MenuButton}">
                    ...
                </Button>

            </Grid>


            <!--<TextBlock Text="{Binding Name}" />-->
        </DataTemplate>

        <!--Template for the profile list-->
        <DataTemplate x:Key="ProfileListDataTemplate">
            <Grid x:Name="ProfileGrid" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <!--A nice little icon-->
                <SymbolIcon Grid.Row="0"
                                            Grid.Column="0" 
                                            Symbol="ProtectedDocument" 
                                            Margin="0,0,12,0" />

                <!--Profile name-->
                <TextBlock Text="{Binding Name}"
                                           Grid.Row="0"
                                           Grid.Column="1"
                                           VerticalAlignment="Center"/>

                
            </Grid>
        </DataTemplate>



    </Application.Resources>


</Application>
